{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","LoginButton.jsx","index.js"],"names":["config","apiKey","process","REACT_APP_FB_API_KEY","authDomain","REACT_APP_FB_AUTH_DOMAIN","databaseURL","REACT_APP_FB_DATABASE_URL","projectId","REACT_APP_FB_PROJECT_ID","storageBucket","REACT_APP_FB_STORAGE_BUCKET","messagingSenderId","REACT_APP_FB_MESSAGING_SENDER_ID","appId","REACT_APP_FB_APP_ID","firebase","initializeApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LoginButton","textButton","autoLoad","fields","scope","callback","response","error","console","log","icon","returnScopes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAGMA,G,MAAS,CACbC,OAAQC,mIAAYC,qBACpBC,WAAYF,mIAAYG,yBACxBC,YAAaJ,mIAAYK,0BACzBC,UAAWN,mIAAYO,wBACvBC,cAAeR,mIAAYS,4BAC3BC,kBAAmBV,mIAAYW,iCAC/BC,MAAOZ,mIAAYa,sBAGrBC,IAASC,cAAcjB,GAERgB,EAAf,EAAeA,I,OCyEAE,IC5EAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iBC2BCQ,EA9BK,WAelB,OACE,cAAC,IAAD,CACEC,WAAW,qDACXf,MAAM,mBACNgB,UAAU,EACVC,OAAO,qBACPC,MAAM,uDACNC,SArBqB,SAACC,GACxB,IACMA,EAASC,OACXC,QAAQC,IAAI,SACZD,QAAQC,IAAIH,EAASC,SAErBC,QAAQC,IAAI,aACZD,QAAQC,IAAIH,IAEd,MAAOC,GACPC,QAAQD,MAAM,SACdC,QAAQD,MAAMA,KAWdG,KAAK,gBACLC,cAAc,KCrBpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.a45d54fb.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  authDomain: process.env.REACT_APP_FB_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FB_DATABASE_URL,\n  projectId: process.env.REACT_APP_FB_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FB_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FB_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FB_APP_ID,\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport firebase from \"./firebase\";\n\nfunction App() {\n  const facebookLogin = () => {\n    // フェイスブックログイン処理\n    const provider = new firebase.auth.FacebookAuthProvider();\n\n    // provider.addScope(\"instagram_basic,pages_show_list\");\n    provider.addScope(\n      \"user_gender,user_friends,pages_show_list,instagram_basic\"\n    );\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        var user = result.user;\n        console.log(\"user\");\n        console.log(user);\n        console.log(\"result\");\n        console.log(result);\n        console.log(\"facebook login \");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const facebookLogout = () => {\n    firebase.auth().signOut();\n  };\n\n  const checkLoginUser = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        var uid = user.uid;\n        console.log(uid);\n        console.log(user);\n        // ...\n      } else {\n      }\n    });\n  };\n\n  const initFirebaseAuth = () => {\n    return new Promise((resolve) => {\n      firebase.auth().onAuthStateChanged((user) => {\n        // user オブジェクトを resolve\n        resolve(user);\n        console.log(\"unsubscribe\");\n        // 登録解除\n        // unsubscribe();\n      });\n    });\n  };\n\n  useEffect(() => {\n    async function getUserData() {\n      const user = await initFirebaseAuth();\n      // ログインしていれば中通る\n      if (user) {\n        console.log(user); // ユーザー情報が表示される\n      }\n      console.log(\"---------useEffect\");\n      await firebase.auth().onAuthStateChanged(async (user) => {\n        if (user) {\n          const { uid, displayName } = user;\n          console.log(uid);\n          console.log(displayName);\n          return null;\n        }\n        console.log(\"---------useEffect after\");\n      });\n\n      console.log(\"---------useEffect after22222\");\n    }\n    getUserData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <button onClick={facebookLogin}>Facebookでログイン</button>\n      <button onClick={facebookLogout}>log out</button>\n      <button onClick={checkLoginUser}>ユーザを確認</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport FacebookLogin from \"react-facebook-login\";\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n\nconst LoginButton = () => {\n  const responseFacebook = (response) => {\n    try {\n      if (response.error) {\n        console.log(\"error\");\n        console.log(response.error);\n      } else {\n        console.log(\"response2\");\n        console.log(response);\n      }\n    } catch (error) {\n      console.error(\"error\");\n      console.error(error);\n    }\n  };\n  return (\n    <FacebookLogin\n      textButton=\"Facebookでログインする\"\n      appId=\"4499411150110925\"\n      autoLoad={false}\n      fields=\"name,email,picture\"\n      scope=\"instagram_basic,pages_show_list,public_profile,email\"\n      callback={responseFacebook}\n      icon=\" fa-facebook \"\n      returnScopes={true}\n      // render={(renderProps) => <button>This is my custom FB button</button>}\n    />\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport LoginButton from \"./LoginButton\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <LoginButton />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}